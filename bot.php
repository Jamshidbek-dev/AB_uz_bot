<?php
// –æ–ø—Ä–µ–¥–µ–ª–∏–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8
header("HTTP/1.1 200 OK");
header('Content-type: text/html; charset=utf-8');
// —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –º–∞–≥–∞–∑–∏–Ω–∞
$newShop = new ShopBot();
// –∑–∞–ø—É—Å–∫–∞–µ–º –º–∞–≥–∞–∑–∏–Ω
$newShop->init();

/** –ö–ª–∞—Å—Å –ú–∞–≥–∞–∑–∏–Ω–∞
 * Class ShopBot
 */
class ShopBot
{
     // dastlabki ma'lumotlar
    private $token = "1234112864:AAERBqV5d8xqiLDc4aB3rFypsdbNCvIaMVU";
    private $admin = 640892021; // –í–∞—à id –≤ –¢–ï–õ–ì–†–ê–ú
    private $helloText = "<b>–ê—Å—Å–∞–ª–æ–º—É –ê–ª–∞–π–∫—É–º!!!</b> \n<b>–§–∞“õ–∞—Ç –ì—É–ª–∏—Å—Ç–æ–Ω —à–∞“≥—Ä–∏–¥–∞ —Å–∏–∑ —É—á—É–Ω –º–∞–∑–∞–ª–∏ —Ç–∞–æ–º–ª–∞—Ä –µ—Ç–∫–∞–∑–∏–± –±–µ—Ä–∏–ª–∞–¥–∏!\n–ò—à –≤–∞“õ—Ç–∏ 9:00 –¥–∞–Ω 23:00 –≥–∞—á–∞</b>\n–ë—û–ª–∏–º–ª–∞—Ä–¥–∞–Ω —Ç–∞–Ω–ª–∞–Ω–≥ üëáüëáüëá";
	private $img_path = "img"; // rasmlar bilan katalogga yo'l


    // –Ø–Ω–¥–µ–∫—Å.–ö–æ—à–µ–ª–µ–∫ –¥–ª—è –ø—Ä–∏–µ–º–∞ –æ–ø–ª–∞—Ç—ã
    private $receiver = "–í–ê–®_–Ø–ù–î–ï–ö–°_–ö–û–®–ï–õ–ï–ö";
    // –∞–¥—Ä–µ—Å –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–∞–¥—Ä–µ—Å—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    private $urlBot = "t.me/forarticlebot";
    // –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
    private $nameShop = "–¢–µ–ª–µ–≥—Ä–∞–º –ß–∞—Ç-–ë–æ—Ç-–ú–∞–≥–∞–∑–∏–Ω";


    
    private $host = 'localhost';
    private $db = 'cp55334_tezovqat';
    private $user = 'cp55334_tezovqat';
    private $pass = '18051992';
    private $charset = 'utf8mb4';
    /**
     * @var PDO
     */
    private $pdo;

    //////////////////////////////////
    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–∞–≥–∞–∑–∏–Ω
    //////////////////////////////////
    /** –°—Ç–∞—Ä—Ç—É–µ–º  –±–æ—Ç–∞
     * @return bool
     */
    public function init()
    {
        // —Å–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        $this->setPdo();
        // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ê–ü–ò –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏—Ö –≤ –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤
        $rawData = json_decode(file_get_contents('php://input'), true);
        // –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–æ—Ç–∞ –≤ –º–µ—Ç–æ–¥
        // –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π
        $this->router($rawData);
        // –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –≤–µ—Ä–Ω–µ–º true –¥–ª—è –±–æ—Ç –∞–ø–∏
        return true;
    }

    /** –†–æ—É—Ç–µ—Ä - –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å –∑–∞–ø—Ä–æ—Å–æ–º –æ—Ç –ê–ü–ò
     * @param $data
     * @return bool
     */
    private function router($data)
    {
        // –±–µ—Ä–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ id —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è == –µ–≥–æ id –∏ —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–µ–ª
        $chat_id = $this->getChatId($data);
        $text = $this->getText($data);

        // –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ message
        if (array_key_exists("message", $data)) {
            // –¥–∞—Å—Ç–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∞ –∏–∑ –±–∞–∑—ã
            $action = $this->getAdminAction();
            $actionUser = $this->getUserAction($chat_id);

            // —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (array_key_exists("text", $data['message'])) {
                // –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏—à–µ–ª —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞
                if ($text == "/start") {
                    $this->startBot($chat_id, $data);
                } elseif ($text == "/admin" && $this->isAdmin($chat_id)) {
                    // –≤—ã–≤–æ–¥–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É
                    $this->adminPage();
                } elseif ($text == "/admincategory" && $this->isAdmin($chat_id)) {
                    // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                    $this->adminCategory();
                } elseif ($text == "/addcategory" && $this->isAdmin($chat_id)) {
                    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    $this->addCategory();
                } elseif ($text == "/admincontact" && $this->isAdmin($chat_id)) {
                    // –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                    $this->adminContact();
                } else { // –¥—Ä—É–≥–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                    // —Å–º–æ—Ç—Ä–∏–º –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                    if ($action == "addcategory" && $this->isAdmin($chat_id)) {
                        // –µ—Å–ª–∏ –∂–¥–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                        $this->adderCategory($text);
                    } elseif (preg_match("~^addproduct_1_~", $action) && $this->isAdmin($chat_id)) {
                        // –µ—Å–ª–∏ –∂–¥–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ step_1 - –Ω–∞–∑–≤–∞–Ω–∏–µ
                        $param = explode("_", $action);
                        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
                        $this->addProductName($param['2'], $text);
                    } elseif (preg_match("~^addproduct_2_~", $action) && $this->isAdmin($chat_id)) {
                        // –µ—Å–ª–∏ –∂–¥–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ step_2 - –æ–ø–∏—Å–∞–Ω–∏–µ
                        $param = explode("_", $action);
                        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
                        $this->addProductDescription($param['2'], $param['3'], $text);
                    } elseif (preg_match("~^addproduct_3_~", $action) && $this->isAdmin($chat_id)) {
                        // –µ—Å–ª–∏ –∂–¥–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ step_3 - –µ–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è
                        $param = explode("_", $action);
                        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
                        $this->addProductPrice($param['2'], $param['3'], $text);
                    } elseif (preg_match("~^addproduct_4_~", $action) && $this->isAdmin($chat_id)) {
                        // –µ—Å–ª–∏ –∂–¥–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ step_4 - —Ü–µ–Ω–∞
                        $param = explode("_", $action);
                        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
                        $this->addProductUnit($param['2'], $param['3'], $text);
                    } elseif (preg_match("~^addcontact_~", $action) && $this->isAdmin($chat_id)) {
                        // –µ—Å–ª–∏ –∂–¥–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                        $param = explode("_", $action);
                        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                        $this->rederContact($param[1], $text);
                    } elseif (preg_match("~^step_1_phone$~", $actionUser)) {
                        // –µ—Å–ª–∏ –∂–¥–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                        $this->savePhoneUser($text, $data);
                    } elseif (preg_match("~^step_2_adress$~", $actionUser)) {
                        // –µ—Å–ª–∏ –∂–¥–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
                        $this->saveAdressUser($text, $data);
                    } else { // –µ—Å–ª–∏ –Ω–µ –∂–¥–µ–º –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
                        $this->sendMessage($chat_id, "Bizga sms yubormang tugmalardan foydalaning. Boshidan boshlash üëâ /start");
                    }
                }
            } elseif (array_key_exists("photo", $data['message'])) {
                // –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—Å–ª–∏ –∂–¥–µ–º
                if (preg_match("~^addproduct_5_~", $action) && $this->isAdmin($chat_id)) {
                    // –µ—Å–ª–∏ –∂–¥–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ step_5 - –∫–∞—Ä—Ç–∏–Ω–∫–∞
                    $param = explode("_", $action);
                    // –±–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
                    $file_id = end($data['message']['photo'])['file_id'];
                    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
                    $this->addProductPhoto($param['2'], $param['3'], $file_id);
                } else { // –µ—Å–ª–∏ –Ω–µ –∂–¥–µ–º –∫–∞—Ä—Ç–∏–Ω–æ–∫ —Ç–æ –ø—Ä–µ–¥—É–ø–µ—Ä–µ–∂–¥–µ–Ω–∏–µ
                    $this->sendMessage($chat_id, "Bizga so'ralgan ma'lumotni yuboring(sms, foto, video yubormang). Boshidan boshlash üëâ /start.");
                }
            } else { // –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ - –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å—Ç–∏–∫–µ—Ä—ã –∞—É–¥–∏–æ ...
                $this->sendMessage($chat_id, "Bizga foto yubormang. Boshidan boshlash üëâ /start");
            }
        } // –µ—Å–ª–∏ –ø—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
        elseif (array_key_exists("callback_query", $data)) {
            // —Å–º–æ—Ç—Ä–∏–º –∫–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
            $func_param = explode("_", $text);
            // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
            $func = $func_param[0];
            // –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ–º –µ–π –≤–µ—Å—å –æ–±—ä–µ–∫—Ç
            $this->$func($data['callback_query']);
        } // –ó–¥–µ—Å—å –ø—Ä–∏—à–ª–∏ –ø–æ–∫–∞ –Ω–µ –Ω—É–∂–Ω—ã–µ –Ω–∞–º —Ñ–æ—Ä–º–∞—Ç—ã
        else {
            // –≤–µ—Ä–Ω–µ–º —Ç–µ–∫—Å—Ç —Å –æ—à–∏–±–∫–æ–π
            $this->sendMessage($chat_id, "Bizga fayl yubormang. Boshidan boshlash üëâ /start");
        }
        return true;
    }

    //////////////////////////////////
    // –†–∞–±–æ—á–∏–µ –º–µ—Ç–æ–¥—ã
    //////////////////////////////////
    /** –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
     * @param $id
     * @param $text
     */
    private function rederContact($id, $text)
    {
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        $update = $this->pdo->prepare("UPDATE bot_shop_contact SET description = :description WHERE id = :id");
        // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–∏–ª–∏ —Ç–æ –≤—ã–≤–æ–¥–∏–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
        if ($update->execute(['id' => $id, 'description' => $text])) {
            // –æ—á–∏—â–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞
            $this->adminActionCancel();
            // –≤—ã–≤–æ–¥–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            $this->adminContact();
        } else {
            $this->sendMessage($this->admin, "Kontaktlarni yangilashda xato. \n/admin");
        }
    }

    /** –§–æ—Ä–º–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
     * @param $data
     */
    private function redContact($data)
    {
        // –±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        $obj = $data['data'];
        // —Ä–∞–∑–±–∏–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
        $param = explode("_", $obj);
        if ($this->setActionAdmin("addcontact_" . $param[1])) {
            // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
            $text = "<b>–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –¥–∞–Ω–Ω—ã—Ö:</b>\n";
            $text .= $this->prepareContact()[0] . "\n\n";
            $text .= "–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:";
            // —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏
            $fields = [
                'chat_id' => $this->admin,
                'text' => $text,
                'parse_mode' => 'html',
                'message_id' => $data['message']['message_id'],
            ];
            // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            $upMessage = $this->botApiQuery("editMessageText", $fields);
            // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
            if ($upMessage['ok']) {
                $this->notice($data['id'], "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ");
            } else {
                $this->notice($data['id'], "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º—ã");
            }
        } else {
            $this->notice($data['id'], "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è");
        }
    }

    /**
     *  –≤—ã–≤–æ–¥–∏–º –∞–¥–º–∏–Ω—É –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
     */
    private function adminContact()
    {
        //–æ—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
        $this->cleareTempProduct();
        // –æ—á–∏—â–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞
        $this->adminActionCancel();
        // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        $item = $this->prepareContact();
        // –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
        $buttons[] = [
            $this->buildInlineKeyBoardButton("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "redContact_" . $item[1]),
        ];
        // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
        $fields = [
            'chat_id' => $this->admin,
            'text' => "<b>–ö–æ–Ω—Ç–∞–∫—ã –º–∞–≥–∞–∑–∏–Ω–∞</b>\n\n" . $item[0] . "\n\n/admin",
            'parse_mode' => 'html',
            'reply_markup' => $this->buildInlineKeyBoard($buttons),
        ];
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        $this->botApiQuery("sendMessage", $fields);
    }

    /** –ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
     * @return array
     */
    private function prepareContact()
    {
        // –ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        $contact = $this->pdo->query("SELECT * FROM bot_shop_contact ORDER BY id DESC LIMIT 1");
        // –ø–∞—Ä—Å–∏–º –≤ –º–∞—Å—Å–∏–≤
        $item = $contact->fetch();
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return [$item['description'], $item['id']];
    }

    /** –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞
     * @param $data
     */
    private function showProduct($data)
    {
        // –±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        $obj = $data['data'];
        // —Ä–∞–∑–±–∏–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
        $param = explode("_", $obj);
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_product WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $param[1]]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() === 0) {
            // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
            $this->notice($data['id'], "–°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞");
            // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ —á–∞—Ç–∞
            $this->botApiQuery("deleteMessage", ['chat_id' => $this->admin, 'message_id' => $data['message']['message_id']]);
        } else {
            // –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
            $item = $checkHref->fetch();
            // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            $catName = $this->pdo->prepare("SELECT name FROM bot_shop_category WHERE id = :id");
            $catName->execute(['id' => $item['parent']]);
            // –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
            $buttons[] = [
                $this->buildInlineKeyBoardButton("–ù–∞–∑–∞–¥", "showCategory_" . $item['parent']),
            ];

            $text = $catName->fetch()['name'] . "\n\n";

            $text .= $this->prepareProduct($param[1]);

            $fields = [
                'chat_id' => $this->admin,
                'text' => $text,
                'parse_mode' => 'html',
                'message_id' => $data['message']['message_id'],
                'reply_markup' => $this->buildInlineKeyBoard($buttons),
            ];
            // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            $upMessage = $this->botApiQuery("editMessageText", $fields);
            // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
            if ($upMessage['ok']) {
                $this->notice($data['id'], "Mahsulot ko'rsatilgan");
            } else {
                $this->notice($data['id'], "Mahsulotni ko'rsatish xatosi");
            }
        }
    }

    /** —É–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
     * @param $data
     */
    private function deleteProduct($data)
    {
        // –±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        $obj = $data['data'];
        // —Ä–∞–∑–±–∏–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
        $param = explode("_", $obj);
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_product WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $param[1]]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() === 0) {
            // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
            $this->notice($data['id'], "–°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞");
            // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ —á–∞—Ç–∞
            $this->botApiQuery("deleteMessage", ['chat_id' => $this->admin, 'message_id' => $data['message']['message_id']]);
        } else {
            // –≥–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å
            $deleteSql = $this->pdo->prepare("DELETE FROM bot_shop_product WHERE id = :id");
            // —É–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            if ($deleteSql->execute(['id' => $param[1]])) {
                // –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
                $item = $checkHref->fetch();
                // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                $catName = $this->pdo->prepare("SELECT name FROM bot_shop_category WHERE id = :id");
                $catName->execute(['id' => $item['parent']]);
                // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                $fields = $this->prepareCategory($catName->fetch()['name'], $item['parent']);
                // –¥–æ–±–∞–≤–ª—è–µ–º –∫ –º–∞—Å—Å–∏–≤—É id —Å–æ–æ–±—â–µ–Ω–∏—è
                $fields['message_id'] = $data['message']['message_id'];
                // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                $upMessage = $this->botApiQuery("editMessageText", $fields);
                // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
                if ($upMessage['ok']) {
                    $this->notice($data['id'], "–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω");
                } else {
                    $this->notice($data['id'], "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π");
                }
            } else {
                $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.");
            }
        }
    }

    /** –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞
     * @param $data
     */
    private function hideProduct($data)
    {
        // –±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        $obj = $data['data'];
        // —Ä–∞–∑–±–∏–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
        $param = explode("_", $obj);
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_product WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $param[1]]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() === 0) {
            // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
            $this->notice($data['id'], "–°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞");
            // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ —á–∞—Ç–∞
            $this->botApiQuery("deleteMessage", ['chat_id' => $this->admin, 'message_id' => $data['message']['message_id']]);
        } else {
            // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –µ—Å–ª–∏ –±—ã–ª 1 —Å—Ç–∞–≤–∏–º 0 –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç
            $hide = $param[2] ? 0 : 1;
            // –≥–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å
            $updateSql = $this->pdo->prepare("UPDATE bot_shop_product SET hide = :hide WHERE id = :id");
            // –æ–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
            if ($updateSql->execute(['hide' => $hide, 'id' => $param[1]])) {
                // –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
                $item = $checkHref->fetch();
                // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                $catName = $this->pdo->prepare("SELECT name FROM bot_shop_category WHERE id = :id");
                $catName->execute(['id' => $item['parent']]);
                // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                $fields = $this->prepareCategory($catName->fetch()['name'], $item['parent']);
                // –¥–æ–±–∞–≤–ª—è–µ–º –∫ –º–∞—Å—Å–∏–≤—É id —Å–æ–æ–±—â–µ–Ω–∏—è
                $fields['message_id'] = $data['message']['message_id'];
                // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                $upMessage = $this->botApiQuery("editMessageText", $fields);
                // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
                if ($upMessage['ok']) {
                    $this->notice($data['id'], "–í–∏–¥–∏–º–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞");
                } else {
                    $this->notice($data['id'], "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π");
                }
            } else {
                $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞");
            }
        }
    }

    /** –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞
     * @param $category
     * @param $product
     * @param $file_id
     */
    private function addProductPhoto($category, $product, $file_id)
    {
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_product_temp WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $product]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() !== 0) {
            // –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
            $photo = $this->getPhoto($file_id);
            if ($photo) {
                // –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
                $insert = $this->pdo->prepare("INSERT INTO bot_shop_product SET parent = :parent, name = :name, description = :description, price = :price, unit = :unit, image_tlg = :image_tlg, image = :image, hide = 1");
                // –¥–æ—Å—Ç–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                $item = $checkHref->fetch();
                // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
                $array = [
                    'parent' => $category,
                    'name' => $item['name'],
                    'description' => $item['description'],
                    'price' => $item['price'],
                    'unit' => $item['unit'],
                    'image_tlg' => $file_id,
                    'image' => $photo
                ];
                // –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                if ($insert->execute($array)) {
                    //–æ—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
                    $this->cleareTempProduct();
                    // –æ—á–∏—â–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞
                    $this->adminActionCancel();
                    // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    $catName = $this->pdo->prepare("SELECT name FROM bot_shop_category WHERE id = :id");
                    $catName->execute(['id' => $category]);
                    // –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
                    $fields = $this->prepareCategory($catName->fetch()['name'], $category);
                    // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ - –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
                    $this->botApiQuery("sendMessage", $fields);
                } else {
                    $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ 0");
                }
            } else {
                $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ 1");
            }
        } else {
            $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ 2");
        }
    }

    /** –æ–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏
     * @param $file_id
     * @return bool|string
     */
    private function getPhoto($file_id)
    {
        // –ø–æ–ª—É—á–∞–µ–º file_path
        $file_path = $this->getPhotoPath($file_id);
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
        return $this->copyPhoto($file_path);
    }

    /** —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —Ñ–∞–π–ª–∞
     * @param $file_id
     * @return mixed
     */
    private function getPhotoPath($file_id)
    {
        // –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç File
        $array = $this->botApiQuery("getFile", ['file_id' => $file_id]);
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º file_path
        return $array['result']['file_path'];
    }

    /** –∫–æ–ø–∏—Ä—É–µ–º —Ñ–æ—Ç–æ –∫ —Å–µ–±–µ
     * @param $file_path
     * @return bool|string
     */
    private function copyPhoto($file_path)
    {
        // —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ
        $file_from_tgrm = "https://api.telegram.org/file/bot" . $this->token . "/" . $file_path;
        // –¥–æ—Å—Ç–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        $ext = end(explode(".", $file_path));
        // –Ω–∞–∑–Ω–∞—á–∞–µ–º —Å–≤–æ–µ –∏–º—è –∑–¥–µ—Å—å –≤—Ä–µ–º—è_–≤_—Å–µ–∫—É–Ω–¥–∞—Ö.—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ_—Ñ–∞–π–ª–∞
        $name_our_new_file = $this->img_path . "/" . time() . "." . $ext;
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–ª–∏ false
        return copy($file_from_tgrm, $name_our_new_file) ? $name_our_new_file : false;
    }

    /** –î–æ–±–∞–≤–ª—è–µ–º –µ–¥–µ–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è
     * @param $category
     * @param $product
     * @param $text
     */
    private function addProductUnit($category, $product, $text)
    {
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_product_temp WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $product]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() !== 0) {
            // –≥–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å
            $update = $this->pdo->prepare("UPDATE bot_shop_product_temp SET unit = :unit WHERE id = :id");
            // –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ç–æ –ø—Ä–æ—Å–∏–º –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
            if ($update->execute(['id' => $product, 'unit' => $text])) {
                // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å–≤—Ç–∏–µ –∞–¥–º–∏–Ω–∞ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
                if ($this->setActionAdmin("addproduct_5_" . $category . "_" . $product)) {
                    // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    $cat = $this->pdo->prepare("SELECT * FROM bot_shop_category WHERE id = :id");
                    // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
                    $cat->execute(['id' => $category]);
                    // –≥–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç
                    $text = "–ü—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: " . $cat->fetch()['name'] . "\n\n";
                    // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ —Ç–æ–≤–∞—Ä–µ
                    $text .= $this->prepareProduct($product, "_temp");
                    // –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
                    $text .= "\n–î–æ–±–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è —Ç–æ–≤–∞—Ä–∞:";
                    // –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω–∏—Ç—å
                    $buttons[] = [
                        $this->buildInlineKeyBoardButton("–û—Ç–º–µ–Ω–∏—Ç—å", "addProductCancel_" . $category . "_" . $product),
                    ];
                    $fields = [
                        'chat_id' => $this->admin,
                        'text' => $text,
                        'reply_markup' => $this->buildInlineKeyBoard($buttons),
                        'parse_mode' => 'html',
                    ];
                    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                    $this->botApiQuery("sendMessage", $fields);
                }
            } else {
                $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ 1");
            }
        } else {
            $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ 2");
        }
    }

    /** –î–æ–±–∞–≤–ª—è–µ–º —Ü–µ–Ω—É
     * @param $category
     * @param $product
     * @param $text
     */
    private function addProductPrice($category, $product, $text)
    {
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_product_temp WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $product]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() !== 0) {
            // –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —á–∏—Å–ª–æ –∏ –ø—Ä–∏–≤–µ—Å—Ç–≤–∏ –∏—Ö –∫ –º–æ–¥—É–ª—é
            if (!is_numeric($text)) {
                $this->sendMessage($this->admin, "–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
            } else {
                // –ø—Ä–∏–≤–æ–¥–∏–º –∫ –º–æ–¥—É–ª—é —á–∏—Å–ª—É
                $text = abs($text);
                // –≥–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å
                $update = $this->pdo->prepare("UPDATE bot_shop_product_temp SET price = :price WHERE id = :id");
                // –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ç–æ –ø—Ä–æ—Å–∏–º –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
                if ($update->execute(['id' => $product, 'price' => $text])) {
                    // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å–≤—Ç–∏–µ –∞–¥–º–∏–Ω–∞ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
                    if ($this->setActionAdmin("addproduct_4_" . $category . "_" . $product)) {
                        // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                        $cat = $this->pdo->prepare("SELECT * FROM bot_shop_category WHERE id = :id");
                        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
                        $cat->execute(['id' => $category]);
                        // –≥–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç
                        $text = "–ü—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: " . $cat->fetch()['name'] . "\n\n";
                        // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ —Ç–æ–≤–∞—Ä–µ
                        $text .= $this->prepareProduct($product, "_temp");
                        // –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
                        $text .= "\n–î–æ–±–∞–≤—å—Ç–µ –µ–¥–µ–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è:";
                        // –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω–∏—Ç—å
                        $buttons[] = [
                            $this->buildInlineKeyBoardButton("–û—Ç–º–µ–Ω–∏—Ç—å", "addProductCancel_" . $category . "_" . $product),
                        ];
                        $fields = [
                            'chat_id' => $this->admin,
                            'text' => $text,
                            'reply_markup' => $this->buildInlineKeyBoard($buttons),
                            'parse_mode' => 'html',
                        ];
                        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                        $this->botApiQuery("sendMessage", $fields);
                    }
                } else {
                    $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ 1");
                }
            }
        } else {
            $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ 2");
        }
    }

    /** –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
     * @param $category
     * @param $product
     * @param $text
     */
    private function addProductDescription($category, $product, $text)
    {
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_product_temp WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $product]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() !== 0) {
            $update = $this->pdo->prepare("UPDATE bot_shop_product_temp SET description = :description WHERE id = :id");
            // –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ç–æ –ø—Ä–æ—Å–∏–º –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
            if ($update->execute(['id' => $product, 'description' => $text])) {
                // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å–≤—Ç–∏–µ –∞–¥–º–∏–Ω–∞ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
                if ($this->setActionAdmin("addproduct_3_" . $category . "_" . $product)) {
                    // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    $cat = $this->pdo->prepare("SELECT * FROM bot_shop_category WHERE id = :id");
                    // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
                    $cat->execute(['id' => $category]);
                    // –≥–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç
                    $text = "–ü—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: " . $cat->fetch()['name'] . "\n\n";
                    // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ —Ç–æ–≤–∞—Ä–µ
                    $text .= $this->prepareProduct($product, "_temp");
                    // –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
                    $text .= "\n–î–æ–±–∞–≤—å—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 0.00 (—Ü–µ–ª–æ–µ –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ):";
                    // –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω–∏—Ç—å
                    $buttons[] = [
                        $this->buildInlineKeyBoardButton("–û—Ç–º–µ–Ω–∏—Ç—å", "addProductCancel_" . $category . "_" . $product),
                    ];
                    $fields = [
                        'chat_id' => $this->admin,
                        'text' => $text,
                        'reply_markup' => $this->buildInlineKeyBoard($buttons),
                        'parse_mode' => 'html',
                    ];
                    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                    $this->botApiQuery("sendMessage", $fields);
                }
            } else {
                $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ 1");
            }
        } else {
            $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞ 2");
        }
    }

    /** –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
     * @param $id
     * @param $text
     */
    private function addProductName($id, $text)
    {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
        $insert = $this->pdo->prepare("INSERT INTO bot_shop_product_temp SET parent = :id, name = :name");
        // –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ç–æ –ø—Ä–æ—Å–∏–º –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
        if ($insert->execute(['id' => $id, 'name' => $text])) {
            // –ø–æ–ª—É—á–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π id
            $idProduct = $this->pdo->lastInsertId();
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å–≤—Ç–∏–µ –∞–¥–º–∏–Ω–∞ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
            if ($this->setActionAdmin("addproduct_2_" . $id . "_" . $idProduct)) {
                // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                $category = $this->pdo->prepare("SELECT * FROM bot_shop_category WHERE id = :id");
                // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
                $category->execute(['id' => $id]);
                // –≥–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç
                $text = "–ü—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: " . $category->fetch()['name'] . "\n\n";
                // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ —Ç–æ–≤–∞—Ä–µ
                $text .= $this->prepareProduct($idProduct, "_temp");
                // –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
                $text .= "\n–î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:";
                // –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω–∏—Ç—å
                $buttons[] = [
                    $this->buildInlineKeyBoardButton("–û—Ç–º–µ–Ω–∏—Ç—å", "addProductCancel_" . $id . "_" . $idProduct),
                ];
                $fields = [
                    'chat_id' => $this->admin,
                    'text' => $text,
                    'reply_markup' => $this->buildInlineKeyBoard($buttons),
                    'parse_mode' => 'html',
                ];
                // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                $this->botApiQuery("sendMessage", $fields);
            }
        } else {
            $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞");
        }
    }

    /** –≥–æ—Ç–æ–≤–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
     * @param $id
     * @param string $type
     * @return bool|string
     */
    private function prepareProduct($id, $type = "")
    {
        $product = $this->pdo->prepare("SELECT * FROM bot_shop_product" . $type . " WHERE id = :id");
        $product->execute(['id' => $id]);
        if ($product->rowCount() === 0) {
            return false;
        } else {
            $item = $product->fetch();
            // —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Å–∫–ª–∞–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
            $text = "";
            // –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–∫–Ω–∏
            if (empty($item['image'])) {
                $image = "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞";
            } else {
                $image = "";
                $text .= "<a href='https://" . $_SERVER['SERVER_NAME'] . "/" . $item['image'] . "'>&#8203;&#8203;</a>";
            }
            $text .= "<b>Nomi: </b>" . $item['name'] . "\n";
            $text .= "<b>Ta'rif: </b>" . $item['description'] . "\n";
            $text .= "<b>Narxi: </b>" . $item['price'] . "\n";
            $text .= "<b>Miqdori: </b>" . $item['unit'] . "\n";
            $text .=  $image . "\n";
            // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            return $text;
        }
    }

    /** –û—Ç–º–µ–Ω—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
     * @param $data
     * @return bool
     */
    private function addProductCancel($data)
    {
        // –±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        $obj = $data['data'];
        // —Ä–∞–∑–±–∏–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
        $param = explode("_", $obj);
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ 0
        if ($param[2] != 0) {
            // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑–µ
            $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_product_temp WHERE id = :id");
            // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
            $checkHref->execute(['id' => $param[2]]);
            // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
            if ($checkHref->rowCount() === 0) {
                // –≤—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                $this->notice($data['id'], "–°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞");
                // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ —á–∞—Ç–∞
                $this->botApiQuery("deleteMessage", ['chat_id' => $this->admin, 'message_id' => $data['message']['message_id']]);
                // –æ—Å—Ç–∞–Ω–æ–≤–∏–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
                return true;
            }
        }
        // –æ—á–∏—â–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∞
        if ($this->adminActionCancel()) {
            // —É–¥–∞–ª—è–µ–º –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –≤—Å–µ
            if (!$this->cleareTempProduct()) {
                $this->notice($data['id'], "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞");
            } else {
                // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –±–∞–∑–µ
                $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_category WHERE id = :id");
                // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
                $checkHref->execute(['id' => $param[1]]);
                // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
                if ($checkHref->rowCount() === 0) {
                    // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
                    $this->notice($data['id'], "–°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞");
                    // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ —á–∞—Ç–∞
                    $this->botApiQuery("deleteMessage", ['chat_id' => $this->admin, 'message_id' => $data['message']['message_id']]);
                } else {
                    // –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
                    $fields = $this->prepareCategory($checkHref->fetch()['name'], $param[1]);
                    // –¥–æ–±–∞–≤–ª—è–µ–º –∫ –º–∞—Å—Å–∏–≤—É id —Å–æ–æ–±—â–µ–Ω–∏—è
                    $fields['message_id'] = $data['message']['message_id'];
                    // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ - –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
                    $upMessage = $this->botApiQuery("editMessageText", $fields);
                    // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
                    if ($upMessage['ok']) {
                        $this->notice($data['id'], "–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
                    } else {
                        $this->notice($data['id'], "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
                    }
                }
            }
        } else {
            $this->notice($data['id'], "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∞");
        }
    }

    /** –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Ç–æ–≤–∞—Ä–æ–≤
     * @return mixed
     */
    private function cleareTempProduct()
    {
        return $this->pdo->query("DELETE FROM bot_shop_product_temp");
    }

    /** –≤—ã–≤–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∞–∑–∞–¥
     * @param $data
     * @return bool
     */
    private function addProduct($data)
    {
        // –±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        $obj = $data['data'];
        // —Ä–∞–∑–±–∏–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
        $param = explode("_", $obj);
        // –æ—á–∏—â–∞–µ–º –≤—Ä–µ–º.—Ç–∞–±–ª
        if (!$this->cleareTempProduct()) {
            // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç
            $this->notice($data['id'], "Vaqtinchalik jadvalni tozalashda xato");
            return true;
        }
        // –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∞
        if ($this->setActionAdmin("addproduct_1_" . $param[1])) {
            // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            $category = $this->pdo->prepare("SELECT * FROM bot_shop_category WHERE id = :id");
            // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
            $category->execute(['id' => $param[1]]);
            // –≥–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç
            $text = "Elementni toifaga qo'shish jarayoni: " . $category->fetch()['name'] . "\n\n";
            // –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            $buttons[] = [
                $this->buildInlineKeyBoardButton("–û—Ç–º–µ–Ω–∏—Ç—å", "addProductCancel_" . $param[1] . "_0"),
            ];
            // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            $fields = [
                'chat_id' => $this->admin,
                'message_id' => $data['message']['message_id'],
                'text' => $text . '–î–æ–±–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:',
                'reply_markup' => $this->buildInlineKeyBoard($buttons),
            ];
            // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            $upMessage = $this->botApiQuery("editMessageText", $fields);
            // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
            if ($upMessage['ok']) {
                $this->notice($data['id'], "–î–æ–±–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ");
            } else {
                $this->notice($data['id'], "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º—ã 1");
            }
        } else {
            $this->notice($data['id'], "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω—É");
        }
    }

    /** –°–º–æ—Ç—Ä–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
     * @param $data
     */
    private function showCategory($data)
    {
        // –±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        $obj = $data['data'];
        // —Ä–∞–∑–±–∏–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
        $param = explode("_", $obj);
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_category WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $param[1]]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() === 0) {
            // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
            $this->notice($data['id'], "Havola eskirgan");
            // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ —á–∞—Ç–∞
            $this->botApiQuery("deleteMessage", ['chat_id' => $this->admin, 'message_id' => $data['message']['message_id']]);
        } else {
            // –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
            $fields = $this->prepareCategory($checkHref->fetch()['name'], $param[1]);
            // –¥–æ–±–∞–≤–ª—è–µ–º –∫ –º–∞—Å—Å–∏–≤—É id —Å–æ–æ–±—â–µ–Ω–∏—è
            $fields['message_id'] = $data['message']['message_id'];
            // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ - –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
            $upMessage = $this->botApiQuery("editMessageText", $fields);
            // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
            if ($upMessage['ok']) {
                $this->notice($data['id'], "Kategoriyani ko'rib chiqish");
            } else {
                $this->notice($data['id'], "Toifani ko‚Äòrsatishda xato");
            }
        }
    }

    /** –ì–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     * @param $name
     * @param $id
     * @return array
     */
    private function prepareCategory($name, $id)
    {
        // –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
        $buttons = [];
        // –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ –∏ –¥–æ–±–∞–≤–∏—Ç—å
        $buttons[] = [
            $this->buildInlineKeyBoardButton("–ù–∞–∑–∞–¥", "adminCats_0"),
            $this->buildInlineKeyBoardButton("–î–æ–±–∞–≤–∏—Ç—å", "addProduct_" . $id),
        ];
        // –ø–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –±–∞–∑—ã
        $products = $this->pdo->prepare('SELECT * FROM bot_shop_product WHERE parent = :id');
        $products->execute(['id' => $id]);
        // –ø—Ä–æ—Ö–æ–¥–∏–º —Ü–∏–∫–ª–æ–º –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º –∏–∑ –±–∞–∑—ã
        while ($row = $products->fetch()) {
            // –∑–¥–µ—Å—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏–∫–æ–Ω–æ–∫ —ç–º–æ–¥–∑–∏ - –≤–æ–∑–º–æ–∂–Ω–æ –∏—Ö –Ω–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ, –Ω–æ –æ–Ω–∏ –∑–¥–µ—Å—å –µ—Å—Ç—å
            // –≤—ã–≤–æ–¥–∏–º –∏–∫–æ–Ω–∫—É –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
            $hideIcon = $row['hide'] ? 'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ' : 'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ';
            // —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –æ–¥–Ω–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥—Ä—É–≥–∞—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            $buttons[] = [
                $this->buildInlineKeyBoardButton($row['name'], "showProduct_" . $row['id']),
                $this->buildInlineKeyBoardButton($hideIcon, "hideProduct_" . $row['id'] . "_" . $row['hide']),
                $this->buildInlineKeyBoardButton("‚úñ", "deleteProduct_" . $row['id']),
            ];
        }
        // –ø–µ—Ä–≤–∏—á–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        $fields = [
            'chat_id' => $this->admin,
            'parse_mode' => 'html'
        ];
        // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç
        $text = "–¢–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ \"" . $name . "\":";
        // —Å–º–æ—Ç—Ä–∏–º —Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤
        if ($products->rowCount() === 0) {
            // –µ—Å–ª–∏ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º
            $text .= "\nMa'lumotlar bazasida ushbu toifadagi mahsulotlar hali mavjud emas.";
        }
        // –≤—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫–∏
        $fields['reply_markup'] = $this->buildInlineKeyBoard($buttons);
        // –¥–æ–±–∞–≤–ª—è–µ–º –≤ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç
        $fields['text'] = $text;
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤
        return $fields;
    }

    /** —É–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
     * @param $data
     */
    private function deleteCategory($data)
    {
        // –±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        $obj = $data['data'];
        // —Ä–∞–∑–±–∏–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
        $param = explode("_", $obj);
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_category WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $param[1]]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() === 0) {
            // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
            $this->notice($data['id'], "–°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞");
            // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ —á–∞—Ç–∞
            $this->botApiQuery("deleteMessage", ['chat_id' => $this->admin, 'message_id' => $data['message']['message_id']]);
        } else {
            // –≥–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å
            $deleteSql = $this->pdo->prepare("DELETE FROM bot_shop_category WHERE id = :id");
            // —É–¥–∞–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            if ($deleteSql->execute(['id' => $param[1]])) {
                //—É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                $products = $this->pdo->prepare("SELECT id, image FROM bot_shop_product WHERE parent = :parent");
                if ($products->execute(['parent' => $param[1]])) {
                    while ($item = $products->fetch()) {
                        @unlink($item['image']);
                        $this->pdo->query("DELETE FROM bot_shop_product WHERE id = " . $item['id']);
                    }
                }
                // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                $fields = $this->prepareAdminCategory();
                // –¥–æ–±–∞–≤–ª—è–µ–º –∫ –º–∞—Å—Å–∏–≤—É id —Å–æ–æ–±—â–µ–Ω–∏—è
                $fields['message_id'] = $data['message']['message_id'];
                // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                $upMessage = $this->botApiQuery("editMessageText", $fields);
                // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
                if ($upMessage['ok']) {
                    $this->notice($data['id'], "Kategoriya o'chirildi");
                } else {
                    $this->notice($data['id'], "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π");
                }
            } else {
                $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.");
            }
        }
    }

    /** –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     * @param $data
     */
    private function hideCategory($data)
    {
        // –±–µ—Ä–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
        $obj = $data['data'];
        // —Ä–∞–∑–±–∏–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
        $param = explode("_", $obj);
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_category WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $param[1]]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() === 0) {
            // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
            $this->notice($data['id'], "–°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞");
            // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ —á–∞—Ç–∞
            $this->botApiQuery("deleteMessage", ['chat_id' => $this->admin, 'message_id' => $data['message']['message_id']]);
        } else {
            // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –µ—Å–ª–∏ –±—ã–ª 1 —Å—Ç–∞–≤–∏–º 0 –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç
            $hide = $param[2] ? 0 : 1;
            // –≥–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å
            $updateSql = $this->pdo->prepare("UPDATE bot_shop_category SET hide = :hide WHERE id = :id");
            // –æ–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
            if ($updateSql->execute(['hide' => $hide, 'id' => $param[1]])) {
                // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                $fields = $this->prepareAdminCategory();
                // –¥–æ–±–∞–≤–ª—è–µ–º –∫ –º–∞—Å—Å–∏–≤—É id —Å–æ–æ–±—â–µ–Ω–∏—è
                $fields['message_id'] = $data['message']['message_id'];
                // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                $upMessage = $this->botApiQuery("editMessageText", $fields);
                // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
                if ($upMessage['ok']) {
                    $this->notice($data['id'], "–í–∏–¥–∏–º–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞");
                } else {
                    $this->notice($data['id'], "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π");
                }
            } else {
                $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
            }
        }
    }

    /** –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
     * @param $name
     */
    private function adderCategory($name)
    {
        // –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–µ–ª–∞–µ–º –µ–µ –Ω–µ –≤–∏–¥–∏–º–æ–π
        $insertSql = $this->pdo->prepare("INSERT INTO bot_shop_category SET name = :name, hide = 1");
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if ($insertSql->execute(['name' => $name])) {
            // –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–æ —É–¥–∞–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞
            if (!$this->adminActionCancel()) {
                $this->sendMessage($this->admin, "–ö–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ–±–∞–≤–∏–ª–∏, –Ω–æ –Ω–µ —Å–º–æ–≥–ª–∏ —É–¥–∞–ª–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ");
            }
            // –≤—ã–≤–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
            $this->adminCategory();
        } else {
            $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
        }
    }

    /**
     *  –§–æ—Ä–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    private function addCategory()
    {
        // –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∞
        if ($this->setActionAdmin("addcategory")) {
            // –≤—ã–≤–æ–¥–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
            $this->sendMessage($this->admin, "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:");
        }
    }

    /** –û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞
     * @return mixed
     */
    private function adminActionCancel()
    {
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞
        return $this->pdo->query("DELETE FROM bot_shop_action_admin");
    }

    /** –ü–æ–ª—É—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
     * @return bool
     */
    private function getAdminAction()
    {
        // –¥–æ—Å—Ç–∞–µ–º –∏–∑ –±–∞–∑—ã
        $last = $this->pdo->query("SELECT name FROM bot_shop_action_admin ORDER BY id DESC LIMIT 1");
        // –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤
        $lastAction = $last->fetch();
        // –µ—Å–ª–∏ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –∏–Ω–∞—á–µ false
        return isset($lastAction['name']) ? $lastAction['name'] : false;
    }

    /** –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∞
     * @param $action
     * @return mixed
     */
    private function setActionAdmin($action)
    {
        // –æ—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞
        if ($this->adminActionCancel()) {
            // –≥–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å
            $insertSql = $this->pdo->prepare("INSERT INTO bot_shop_action_admin SET name = :name");
            // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            return $insertSql->execute(['name' => $action]);
        } else {
            // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
            $this->sendMessage($this->admin, "–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π.");
        }
    }

    /** –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∞
     *
     */
    private function adminPage()
    {
        // –≥–æ—Ç–æ–≤–∏–º
        $text = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ\n   /admincategory - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏\n   /admincontact - –ö–æ–Ω—Ç–∞–∫—Ç–æ–≤";
        // –≤—ã–≤–æ–¥–∏–º
        $this->sendMessage($this->admin, $text);
    }

    /**
     * –≤—ã–≤–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    private function adminCategory()
    {
        //–æ—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
        $this->cleareTempProduct();
        // –æ—á–∏—â–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∞
        $this->adminActionCancel();
        // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        $fields = $this->prepareAdminCategory();
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω—É
        $this->botApiQuery("sendMessage", $fields);
    }

    /** –≤—ã–≤–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∞–∑–∞–¥
     * @param $data
     */
    private function adminCats($data)
    {
        $fields = $this->prepareAdminCategory();
        // –¥–æ–±–∞–≤–ª—è–µ–º –∫ –º–∞—Å—Å–∏–≤—É id —Å–æ–æ–±—â–µ–Ω–∏—è
        $fields['message_id'] = $data['message']['message_id'];
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        $upMessage = $this->botApiQuery("editMessageText", $fields);
        // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
        if ($upMessage['ok']) {
            $this->notice($data['id'], "–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π");
        } else {
            $this->notice($data['id'], "–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π");
        }
    }

    /** –≥–æ—Ç–æ–≤–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     * @return array
     */
    private function prepareAdminCategory()
    {
        // —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        $buttons = [];
        // –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã
        $category = $this->pdo->query('SELECT * FROM bot_shop_category');
        // –ø—Ä–æ—Ö–æ–¥–∏–º —Ü–∏–∫–ª–æ–º –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º –∏–∑ –±–∞–∑—ã
        while ($row = $category->fetch()) {
            // –∑–¥–µ—Å—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏–∫–æ–Ω–æ–∫ —ç–º–æ–¥–∑–∏ - –≤–æ–∑–º–æ–∂–Ω–æ –∏—Ö –Ω–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ, –Ω–æ –æ–Ω–∏ –∑–¥–µ—Å—å –µ—Å—Ç—å
            // –≤—ã–≤–æ–¥–∏–º –∏–∫–æ–Ω–∫—É –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
            $hideIcon = $row['hide'] ? 'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ' : 'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ';
            // —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –æ–¥–Ω–∞–¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥—Ä—É–≥–∞—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            $buttons[] = [
                $this->buildInlineKeyBoardButton($row['name'], "showCategory_" . $row['id']),
                $this->buildInlineKeyBoardButton($hideIcon, "hideCategory_" . $row['id'] . "_" . $row['hide']),
                $this->buildInlineKeyBoardButton("‚úñ", "deleteCategory_" . $row['id']),
            ];
        }
        // –ø–µ—Ä–≤–∏—á–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        $fields = [
            'chat_id' => $this->admin,
            'parse_mode' => 'html'
        ];
        // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç
        $text = "/addcategory - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é\n/admin - –≤–µ—Ä–Ω—É—Ç—å—Å—è\n\n–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:";
        // —Å–º–æ—Ç—Ä–∏–º —Å–∫–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        if (count($buttons) == 0) {
            // –µ—Å–ª–∏ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º
            $text .= "\n–ï—â–µ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ.";
        } else {
            // –µ—Å–ª–∏ –µ—Å—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ –≤—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫–∏
            $fields['reply_markup'] = $this->buildInlineKeyBoard($buttons);
        }
        // –¥–æ–±–∞–≤–ª—è–µ–º –≤ –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç
        $fields['text'] = $text;
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return $fields;
    }

    /********************************************/

    // –°—Ç–∞—Ç—å—è 3 - –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω–æ–π

    /********************************************/

    /** –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
     * @param $chat_id
     */
    private function startBot($chat_id, $data)
    {
        // –¥–æ—Å—Ç–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
        $user = $this->pdo->prepare("SELECT * FROM bot_shop_profile WHERE user_id = :user_id");
        $user->execute(['user_id' => $chat_id]);
        // –µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ —Ç–æ –ø–∏—à–µ–º –µ–≥–æ —Ç—É–¥–∞
        if ($user->rowCount() == 0) {
            // –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            $newUser = $this->pdo->prepare("INSERT INTO bot_shop_profile SET user_id = :user_id, first_name = :first_name, last_name = :last_name, phone = :phone, adress = :adress, action = 'start'");
            $newUser->execute([
                'user_id' => $chat_id,
                'first_name' => $data['message']['chat']['first_name'],
                'last_name' => $data['message']['chat']['last_name'],
                'phone' => '',
                'adress' => '',
            ]);
        } else {
            // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å —Ç–æ –º–µ–Ω—è–µ–º –µ–º—É –¥–µ–π—Å—Ç–≤–∏–µ
            @$this->setActionUser("start", $chat_id);
        }
        // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        $text = $this->helloText;
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∞–¥–º–∏–Ω–∞
        if ($this->isAdmin($chat_id)) {
            $text .= "\n\n/admin";
        }
        // –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã –≥–¥–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ —Å–∫—Ä—ã—Ç—ã
        $category = $this->pdo->query('SELECT * FROM bot_shop_category WHERE hide = 0');
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        if ($category->rowCount() > 0) {
            // –ø—Ä–æ—Ö–æ–¥–∏–º —Ü–∏–∫–ª–æ–º –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º –∏–∑ –±–∞–∑—ã
            while ($row = $category->fetch()) {
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                $buttons[][] = $this->buildInlineKeyBoardButton($row['name'], "showUserCategory_" . $row['id']);
            }
        } else {
            // –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ—É
            $buttons = NULL;
            $text .= "\nDo'konda hech narsa yo'q";
        }
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç
        $this->sendMessage($chat_id, $text, $buttons);
    }

    /** –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –∑–∞–ø—Ä–æ—Å—É –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥ :: inline-–≤—ã–∑–æ–≤
     * @param $data
     */
    private function showCatalog($data)
    {
        // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        $chat_id = $this->getChatId($data);
        $message_id = $this->getMessageId($data);
        // –º–µ–Ω—è–µ–º –¥—É–π—Å—Ç–≤–∏–µ
        @$this->setActionUser("show_catalog", $chat_id);
        // –≥–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç
        $text = $this->helloText;
        // –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã –≥–¥–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ —Å–∫—Ä—ã—Ç—ã
        $category = $this->pdo->query('SELECT * FROM bot_shop_category WHERE hide = 0');
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        if ($category->rowCount() > 0) {
            // –ø—Ä–æ—Ö–æ–¥–∏–º —Ü–∏–∫–ª–æ–º –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º –∏–∑ –±–∞–∑—ã
            while ($row = $category->fetch()) {
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                $buttons[][] = $this->buildInlineKeyBoardButton($row['name'], "showUserCategory_" . $row['id']);
            }
        } else {
            $buttons = NULL;
            $text .= "\nDo'konda hech narsa yo'q";
        }
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç
        $this->editMessageText($chat_id, $message_id, $text, $buttons);
        // —É–≤–µ–¥–æ–º–ª—è–µ–º
        $this->notice($data['id']);
    }

    /** –í—ã–≤–æ–¥–∏–º –ö–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     * @param $data
     */
    private function showUserCategory($data)
    {
        // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        $chat_id = $this->getChatId($data);
        $message_id = $this->getMessageId($data);
        $buttons  = array();
        // –º–µ–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        @$this->setActionUser("show_category", $chat_id);
        // –ø–∞—Ä—Å–∏–º callback_data
        $param = explode("_", $data['data']);
        // –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        $category = $this->pdo->prepare('SELECT name FROM bot_shop_category WHERE id = :id');
        $category->execute(['id' => $param[1]]);
        // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        $text = "<b>" . $category->fetch()['name'] . "</b>\n";
        // –ø–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –±–∞–∑—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–∫—Ä—ã—Ç—ã
        $products = $this->pdo->prepare('SELECT * FROM bot_shop_product WHERE parent = :id AND hide = 0');
        $products->execute(['id' => $param[1]]);
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if ($products->rowCount() > 0) {
        	$t = 1;
            // –ø—Ä–æ—Ö–æ–¥–∏–º —Ü–∏–∫–ª–æ–º –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º –∏–∑ –±–∞–∑—ã
            while ($row = $products->fetch()) {
            	if($t == 1){
        			$a = $this->buildInlineKeyBoardButton($row['name'], "showUserProduct_" . $row['id']);
        			$b = null;
        			$c = null;
            	}
            	if($t == 2){
        			$b = $this->buildInlineKeyBoardButton($row['name'], "showUserProduct_" . $row['id']);
        			$c = null;
            	}
            	if($t == 3){
        			$c = $this->buildInlineKeyBoardButton($row['name'], "showUserProduct_" . $row['id']);
        			$buttons[] = [
        				$a, $b, $c	
        			];
        			$t = 0;
        			$a = null;
        			$b = null;
        			$c = null;
            	}
            	$t++;
                // —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–∞
 
            }
            if($a != null and $b != null and $c == null ){
	            $buttons[] = [
	        				$a, $b
	        	];
            }
            if($a != null and $b == null and $c == null ){
	            $buttons[] = [
	        				$a
	        	];
            }
            
        } else {
            // —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç –ø–∏—à–µ–º —á—Ç–æ –ø—É—Å—Ç–æ
            $text .= "Bu toifada maxsulot yo'q";
        }
        
        // –∫–Ω–æ–ø–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞–∑–∞–¥
        $buttons[][] = $this->buildInlineKeyBoardButton("<< –ù–∞–∑–∞–¥", "showCatalog_0");
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –º–µ—Ç–æ–¥ –¥–∞–Ω–Ω—ã–µ
        $this->editMessageText($chat_id, $message_id, $text, $buttons);
        // —É–≤–µ–¥–æ–º–ª—è–µ–º
        $this->notice($data['id']);
    }

    /** –í—ã–≤–æ–¥–∏–º –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä
     * @param $data
     */
    private function showUserProduct($data)
    {
        // –ø–∞—Ä—Å–∏–º callback_data
        $param = explode("_", $data['data']);
        $chat_id = $this->getChatId($data);
        // –º–µ–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        @$this->setActionUser("show_product", $chat_id);
        // –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –±–∞–∑–µ
        $checkHref = $this->pdo->prepare("SELECT * FROM bot_shop_product WHERE id = :id");
        // –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        $checkHref->execute(['id' => $param[1]]);
        // –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–æ—Å—å –Ω–æ–ª—å —Å—Ç—Ä–æ–∫
        if ($checkHref->rowCount() === 0) {
            // –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
            $this->notice($data['id'], "–°—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞");
            // —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ —á–∞—Ç–∞
            $this->botApiQuery("deleteMessage", ['chat_id' => $this->admin, 'message_id' => $data['message']['message_id']]);
        } else {
            // –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
            $item = $checkHref->fetch();
            // –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            $catName = $this->pdo->prepare("SELECT name FROM bot_shop_category WHERE id = :id");
            $catName->execute(['id' => $item['parent']]);
            // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ
            $check = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE product_id = :product_id AND user_id = :user_id");
            $check->execute(['product_id' => $param[1], 'user_id' => $this->getChatId($data)]);
            // —É—Å–ª–æ–≤–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
            if ($check->rowCount() > 0) {
                $count = " (" . $check->fetch()['product_count'] . ")";
            } else {
                $count = "";
            }
            // –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
			if($count == 0){
				$buttons[][] = $this->buildInlineKeyBoardButton($count."‚úî –¢–∞–Ω–ª–∞—à", "addBasket_" . $item['id'] . '_' . $item['parent']);
			}else{
				$buttons[][] = $this->buildInlineKeyBoardButton($count." —Ç–∞ ‚ñ≤", "addBasket_" . $item['id'] . '_' . $item['parent']);
			}
			
			if($count === 1){
				$buttons[] = [
					$this->buildInlineKeyBoardButton("<< –ß–∏“õ–∏—à", "showUserCategory_" . $item['parent']),
					//$this->buildInlineKeyBoardButton($count." —Ç–∞ ‚ñ≤", "addBasket_" . $item['id'] . '_' . $item['parent']),
					$this->buildInlineKeyBoardButton("–î–∞–≤–æ–º —ç—Ç–∏—à >>", "showBasket_0"),
				];
			}
			else{
				if($count === 0){
					$buttons[] = [
					    $this->buildInlineKeyBoardButton("<< –ß–∏“õ–∏—à", "showUserCategory_" . $item['parent']),
					    $this->buildInlineKeyBoardButton("–î–∞–≤–æ–º —ç—Ç–∏—à >>", "showBasket_0"),
					    //$this->buildInlineKeyBoardButton("‚úî –¢–∞–Ω–ª–∞—à", "addBasket_" . $item['id'] . '_' . $item['parent']),
				    ];
				}else{
					$buttons[] = [
						$this->buildInlineKeyBoardButton("<< –ß–∏“õ–∏—à", "showUserCategory_" . $item['parent']),
						$this->buildInlineKeyBoardButton("–î–∞–≤–æ–º —ç—Ç–∏—à >>", "showBasket_0"),
						//$this->buildInlineKeyBoardButton("‚úî –¢–∞–Ω–ª–∞—à", "addBasket_" . $item['id'] . '_' . $item['parent']),
				    ];
				}
				
			}
            // –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω–µ –µ—Å—Ç—å –≤—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ—Ä–∑–∏–Ω—ã
            if ($check->rowCount() > 0) {
                //$buttons[][] = $this->buildInlineKeyBoardButton($count." ‚ñ≤", "addBasket_" . $item['id'] . '_' . $item['parent']);
            }
            $text =  $catName->fetch()['name'] . "\n\n";
            // –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä—É
            $text .= $this->prepareProduct($param[1]);
            // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            $fields = [
                'chat_id' => $chat_id,
                'text' => $text,
                'parse_mode' => 'html',
                'message_id' => $this->getMessageId($data),
                'reply_markup' => $this->buildInlineKeyBoard($buttons),
            ];
            // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            $upMessage = $this->botApiQuery("editMessageText", $fields);
            // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
            if ($upMessage['ok']) {
                $this->notice($data['id'], "Mahsulot ko'rsatilgan");
            } else {
                $this->notice($data['id'], "Mahsulotni ko'rsatish xatosi");
            }
        }
    }

    /** –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
     * @param $data
     * @return bool
     */
    private function addBasket($data)
    {
        // 1 - product_id, 2 - category_id
        $param = explode("_", $data['data']);
        $chat_id = $this->getChatId($data);
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä
        $check = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE product_id = :product_id AND user_id = :user_id");
        $check->execute(['product_id' => $param[1], 'user_id' => $chat_id]);
        // —É—Å–ª–æ–≤–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        if ($check->rowCount() > 0) {
            // –ø–∏—à–µ–º –∫–æ–ª–∏—á–µ—Å–≤—Ç–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
            $count = $check->fetch()['product_count']+1;
            $updateSql = $this->pdo->prepare("UPDATE bot_shop_basket SET product_count = :product_count  WHERE product_id = :product_id AND user_id = :user_id");
            // –æ–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
            if (!$updateSql->execute([
                'product_count' => $count,
                'product_id' => $param[1],
                'user_id' => $chat_id,
            ])) {
                $this->notice($data['id'], "Savatga qo‚Äòshishda xato", true);
                return true;
            }
        } else {
            // –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ –Ω–µ—Ç —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É
            $count = 1;
            $insertSql = $this->pdo->prepare("INSERT INTO bot_shop_basket SET product_id = :product_id, product_count = :product_count, user_id = :user_id");
            // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if (!$insertSql->execute([
                'product_id' => $param[1],
                'product_count' => $count,
                'user_id' => $chat_id
            ])
            ) {
                $this->notice($data['id'], "Savatga qo‚Äòshishda xato", true);
                return true;
            }
        }
        // –≥–æ—Ç–æ–≤–∏–º –∫–Ω–æ–ø–∫–∏
		if($count == 0){
			$buttons[][] = $this->buildInlineKeyBoardButton($count."‚úî –¢–∞–Ω–ª–∞—à ", "addBasket_" . $param[1] . '_' . $param[2]);
		}else{
            $buttons[][] = $this->buildInlineKeyBoardButton($count." —Ç–∞ ‚ñ≤", "addBasket_" . $param[1] . '_' . $param[2]);
		}
		$buttons[] = [
            $this->buildInlineKeyBoardButton("<< –ß–∏“õ–∏—à", "showUserCategory_" . $param[2]),
            $this->buildInlineKeyBoardButton("–î–∞–≤–æ–º —ç—Ç–∏—à >>", "showBasket_0"),
        ];
        // –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
        
        // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
        $fields = [
            'chat_id' => $chat_id,
            'message_id' => $this->getMessageId($data),
            'reply_markup' => $this->buildInlineKeyBoard($buttons),
        ];
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        $upMessage = $this->botApiQuery("editMessageReplyMarkup", $fields);
        // –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
        if ($upMessage['ok']) {
            $this->notice($data['id'], "–û–ö");
        } else {
            $this->notice($data['id'], "Miqdori oshdi", true);	
        }
    }

    /** –í—ã–≤–æ–¥–∏–º –∫–æ—Ä–∑–∏–Ω—É
     * @param $data
     */
    private function showBasket($data)
    {
        // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        $chat_id = $this->getChatId($data);
        // –º–µ–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        @$this->setActionUser("show_basket", $chat_id);
        // –í—ã–≤–æ–¥–∏–º –∫–æ—Ä–∑–∏–Ω—É
        $this->showBasketBegin($chat_id, $data);
        // –≥–ª—É—à–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        $this->notice($data['id']);
    }

    /** –í—ã–≤–æ–¥–∏–º –∫–æ—Ä–∑–∏–Ω—É
     * @param $user_id
     * @param $data
     */
    private function showBasketBegin($user_id, $data)
    {
        // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $check = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE user_id = :user_id");
        $check->execute(['user_id' => $user_id]);
        // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        $basketCount = $check->rowCount();
        // –µ—Å–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ —á—Ç–æ-—Ç–æ –µ—Å—Ç—å
        if ($basketCount > 0) {
            // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
            $array = $this->drawBasket($user_id, 0, $basketCount);
            $text = $array['text'];
            $buttons = $array['buttons'];
        } else {
            // –µ—Å–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ –ø—É—Å—Ç–æ
            $text = "–°–∏–∑ —Ö–µ—á –Ω–∞—Ä—Å–∞ —Ç–∞–Ω–ª–∞–º–∞–¥–∏–Ω–≥–∏–∑. –ë–æ—à–∏–¥–∞–Ω üëâ /start";
        }
        // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        $data_send = [
            'chat_id' => $user_id,
            'text' => $text,
            'message_id' => $this->getMessageId($data),
            'parse_mode' => 'html',
        ];
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫
        if (is_array($buttons)) {
            $data_send['reply_markup'] = $this->buildInlineKeyBoard($buttons);
        }
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        $this->botApiQuery("editMessageText", $data_send);
    }

    /** –†–∏—Å—É–µ–º –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –Ω–∞—á–∞–ª–∞
     * @param $user_id
     * @param $begin
     * @param $basketCount
     * @return array
     */
    private function drawBasket($user_id, $begin, $basketCount)
    {
        // –¥–æ—Å—Ç–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        $model_basket = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE user_id = :user_id ORDER BY id DESC LIMIT " . $begin . ", 1");
        $model_basket->execute(['user_id' => $user_id]);
        $basket = $model_basket->fetch();
        // –¥–æ—Å—Ç–∞–µ–º —Ç–æ–≤–∞—Ä
        $product_id = $basket['product_id'];
        // –¥–æ—Å—Ç–∞–µ–º –º–æ–¥–µ–ª—å –ø—Ä–æ–¥—É–∫—Ç–∞
        $model_product = $this->pdo->prepare("SELECT * FROM bot_shop_product WHERE id = :id");
        $model_product->execute(['id' => $product_id]);
        // –≥–æ—Ç–æ–≤–∏–º –º–∞—Å—Å–∏–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–æ—Ä–∑–∏–Ω—ã
        $item['id'] = $basket['id'];
        $item['count'] = $basket['product_count'];
        $item['price'] = $model_product->fetch()['price'];
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return [
            'text' => "<b>C–∏–∑–¥–∞ ".$basketCount." —Ö–∏–ª –º–∞—Ö—Å—É–ª–æ—Ç –±–æ—Ä</b>"."\n".$this->prepareProduct($product_id),
            'buttons' => $this->drawBasketButton(
                $begin,
                $basketCount,
                $item,
                $this->totalSumOrder($user_id)),
        ];
    }

    /** –†–∏—Å—É–µ–º –∫–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
     * @param $begin
     * @param $basketCount
     * @param $item
     * @param $sum
     * @return array
     */
    private function drawBasketButton($begin, $basketCount, $item, $sum)
    {
        // 1 —Ä—è–¥ –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ
		if ($basketCount > 1) {
            $prev = ($begin == 0) ? $basketCount - 1 : $begin - 1;
            $next = ($basketCount == $begin + 1) ? 0 : $begin + 1;
            $buttons[] = [
                $this->buildInlineKeyBoardButton('<<', 'basketGoProduct_' . $prev),
                $this->buildInlineKeyBoardButton(($begin + 1) . ' ~ ' . $basketCount, 'basketViewParam_0_' . $basketCount),
                $this->buildInlineKeyBoardButton('>>', 'basketGoProduct_' . $next),
            ];
        }
        // 2 —Ä—è–¥ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        $buttons[] = [
            $this->buildInlineKeyBoardButton('‚ñº', 'basketCountProduct_0_' . $item['id'] . '_' . $begin),
			$this->buildInlineKeyBoardButton($item['count'] . ' —Ç–∞ ' . ($item['count'] * $item['price']), "basketViewParam_0_0"),
            //$this->buildInlineKeyBoardButton($item['count']." —Ç–∞ –∑–∞–∫–∞–∑", 'basketViewParam_' . $item['count'] . '_0'),
            $this->buildInlineKeyBoardButton('‚ñ≤', 'basketCountProduct_1_' . $item['id'] . '_' . $begin),
        ];
		$buttons[][] = $this->buildInlineKeyBoardButton('–ë—É—é—Ä—Ç–º–∞–¥–∞–Ω —û—á–∏—Ä–∏—à', 'basketRemoveProduct_' . $item['id'] . '_' . $begin);
		$buttons[][] = $this->buildInlineKeyBoardButton("–ñ–∞–º–∏: ".$sum. " so'm.", "basketViewParam_0_0");
        // 3  —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
        
        // 4 –∫–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
        $buttons[] = [
        	$this->buildInlineKeyBoardButton("<< –û—Ä—Ç–≥–∞", "showCatalog_0"),
        	$this->buildInlineKeyBoardButton('–ó–∞–∫–∞–∑ –±–µ—Ä–∏—à >>', 'setOrder_0'),
        ];
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return $buttons;
    }

    /** –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
     * @param $user_id
     * @return float
     */
    private function totalSumOrder($user_id)
    {
        // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        $check = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE user_id = :user_id");
        $check->execute(['user_id' => $user_id]);
        // –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫ –Ω–æ–ª—å
        $total = 0.00;
        // –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤
        while ($model = $check->fetch()) {
            $model_product = $this->pdo->prepare("SELECT * FROM bot_shop_product WHERE id = :id");
            $model_product->execute(['id' => $model['product_id']]);
            $product = $model_product->fetch();
            // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—É–º–º—É
            $sum = $product['price'] * $model['product_count'];
            $total += $sum;
        }
        // –≤—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥
        return $total;
    }

    /** –ü–æ–¥—Å–∫–∞–∑–∫–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ
     * @param $data
     */
    private function basketViewParam($data)
    {
        // 1- –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ, 2- –æ–±—â–µ–µ –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–∞,
        $param = explode("_", $data['data']);
        // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
        if ($param[1]) {
            $text = "Checkdagi miqdor";
        } elseif ($param[2]) {
            $text = "Qanday mahsulot ko'rsatiladi";
        } else {
            $text = "Tovar miqdorini hisoblash";
        }
        // –≤—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É
        $this->notice($data['id'], $text);
    }

    /** –†–∏—Å—É–µ–º –∫–æ—Ä–∑–∏–Ω—É inline
     * @param $user_id
     * @param $begin
     * @param $message_id
     */
    private function viewItemBasket($user_id, $begin, $message_id)
    {
        // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $check = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE user_id = :user_id");
        $check->execute(['user_id' => $user_id]);
        // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        $basketCount = $check->rowCount();
        // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        $array = $this->drawBasket($user_id, $begin, $basketCount);
        // –∏—Å–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        $this->botApiQuery("editMessageText", [
            'chat_id' => $user_id,
            'text' => $array['text'],
            'reply_markup' => $this->buildInlineKeyBoard($array['buttons']),
            'parse_mode' => 'html',
            'message_id' => $message_id,
        ]);
    }

    /** –õ–∏—Å—Ç–∞–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω–µ
     * @param $data
     */
    private function basketGoProduct($data)
    {
        // 1 - offset
        $param = explode("_", $data['data']);
        // –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –æ—Ç—Ä–∏—Å–æ–≤–∫—É
        $this->viewItemBasket($this->getChatId($data), $param[1], $data['message']['message_id']);
        // –≥–ª—É—à–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        $this->notice($data['id']);
    }

    /** –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–ª–∏ —É–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
     * @param $data
     */
    private function basketCountProduct($data)
    {
        // 1 - —Ç–∏–ø, 2- id, 3- begin
        $param = explode("_", $data['data']);
        // –¥–æ—Å—Ç–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        $model_basket = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE id = :id");
        $model_basket->execute(['id' => $param[2]]);
        $basket = $model_basket->fetch();
        // –¥–æ—Å—Ç–∞–µ–º —Ç–æ–≤–∞—Ä
        $product_id = $basket['product_id'];
        $user_id = $this->getChatId($data);
        // –µ—Å–ª–∏ —É–¥–∞–ª—è—Ç—å –Ω–µ–ª—å–∑—è
        if ($basket['product_count'] == 1 && !$param[1]) {
            // –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä
            $text = "–ü—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏—Ç–µ —Ç–æ–≤–∞—Ä";
        } else {
            // –º–µ–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
            $count = (!$param[1]) ? $basket['product_count'] - 1 : $basket['product_count'] + 1;
            // —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            $up_product = $this->pdo->prepare("UPDATE bot_shop_basket SET product_count = :p_count WHERE id = :id");
            if ($up_product->execute(['p_count' => $count, 'id' => $param[2]])) {
                // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                $check = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE user_id = :user_id");
                $check->execute(['user_id' => $user_id]);
                $basketCount = $check->rowCount();
                // –¥–æ—Å—Ç–∞–µ–º –º–æ–¥–µ–ª—å –ø—Ä–æ–¥—É–∫—Ç–∞
                $model_product = $this->pdo->prepare("SELECT * FROM bot_shop_product WHERE id = :id");
                $model_product->execute(['id' => $product_id]);
                // –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é —Å—É–º–º—É
                $sum = $this->totalSumOrder($user_id);
                // –≥–æ—Ç–æ–≤–∏–º –º–∞—Å—Å–∏–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–æ—Ä–∑–∏–Ω—ã
                $item['id'] = $param[2];
                $item['count'] = $count;
                $item['price'] = $model_product->fetch()['price'];
                // –ø–æ–ª—É—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
                $buttons = $this->drawBasketButton(
                    $param[3],
                    $basketCount,
                    $item,
                    $this->totalSumOrder($user_id));
                // –º–µ–Ω—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                $this->botApiQuery("editMessageReplyMarkup", [
                    'chat_id' => $user_id,
                    'message_id' => $data['message']['message_id'],
                    'reply_markup' => $this->buildInlineKeyBoard($buttons),
                ]);
                // –ø–∏—à–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                $text = ($param[1]) ? "Miqdori oshdi" : "Miqdori kamaytirildi";
            } else {
                // –≤—ã–≤–æ–¥–º –æ—à–∏–±–∫—É
                $text = "Xato ro'y berdi";
            }
        }
        // –≤—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        $this->notice($data['id'], $text);
    }

    /** –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
     * @param $data
     */
    private function basketRemoveProduct($data)
    {
        // 1- id, 2- begin
        $param = explode("_", $data['data']);
        $user_id = $this->getChatId($data);
        // –¥–æ—Å—Ç–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        $model_basket = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE id = :id");
        $model_basket->execute(['id' => $param[1]]);
        $basket = $model_basket->fetch();
        // id —Å–æ–æ–±—â–µ–Ω–∏—è
        $message_id = $data['message']['message_id'];
        // —É–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        $del_product = $this->pdo->prepare("DELETE FROM bot_shop_basket WHERE id = :id");
        if (!$del_product->execute(['id' => $param[1]])) {
            $text = "Xato ro'y berdi_";
        } else {
            // –ø–æ–ª—É—á–∞–µ–º count –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
            $check = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE user_id = :user_id");
            $check->execute(['user_id' => $user_id]);
            $basketCount = $check->rowCount();
            // –µ—Å–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ —á—Ç–æ-—Ç–æ –µ—Å—Ç—å
            if ($basketCount > 0) {
                // –≤—ã—á–∏—Å–ª—è–µ–º –±–µ–≥–∏–Ω
                if ($param[2] == 0) {
                    $num = 0;
                } elseif ($basketCount == $param[2]) {
                    $num = $param[2] - 1;
                } else {
                    $num = $param[2];
                }
                // –≤—ã–≤–æ–¥–∏–º —Å–ª–µ–¥—É—é—â–∏–π
                $this->viewItemBasket($this->getChatId($data), $num, $data['message']['message_id']);
            } else {
                // –µ—Å–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ –ø—É—Å—Ç–æ
                $text_ = "<b>–ö–û–†–ó–ò–ù–ê –±—û—à–∞–¥–∏</b>\n–ë–æ—à–ª–∞—à: üëâ /start ";
                // –∏–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                $this->botApiQuery("editMessageText", [
                    'chat_id' => $user_id,
                    'message_id' => $message_id,
                    'text' => $text_,
                    'parse_mode' => 'html'
                ]);
            }
            // —Ç–µ–∫—Å—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            $text = "–ú–∞—Ö—Å—É–ª–æ—Ç –æ–ª–∏–± —Ç–∞—à–ª–∞–Ω–¥–∏";
        }
        // –≥–ª—É—à–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        $this->notice($data['id'], $text);
    }

    /** –ù–∞—á–∞–ª–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
     * @param $data
     */
    private function setOrder($data)
    {
        $user_id = $this->getChatId($data);
        if ($this->setActionUser("step_1_phone", $user_id)) {
            // –ï—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–º—É –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            $this->insertPhone($user_id, $data);
        } else {
            $this->notice($data['id'], "Xato");
        }
    }

    /** –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
     * @param $user_id
     * @param $data
     */
    private function insertPhone($user_id, $data)
    {
        $text = "<b>–ë—É—é—Ä—Ç–º–∞</b>\n\n";
        // —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
        //$text .= "–ë—É—é—Ä—Ç–º–∞ –º–∏“õ–¥–æ—Ä–∏: " . $this->totalSumOrder($user_id) . " so'm";
        // –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        $text .= "\n\nTe–ª–µ—Ñ–æ–Ω–∏–Ω–≥–∏–∑–Ω–∏ +9989******** —Ñ–æ—Ä–º–∞—Ç–¥–∞ –∫—Ä–∏—Ç–∏–Ω–≥:";
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        $this->botApiQuery("editMessageText", [
            'chat_id' => $user_id,
            'text' => $text,
            'message_id' => $this->getMessageId($data),
            'parse_mode' => 'html',
        ]);
        // –≥–ª—É—à–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        $this->notice($data['id']);
    }

    /** –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
     * @param $text
     * @param $data
     */
    private function savePhoneUser($text, $data)
    {
        $user_id = $this->getChatId($data);
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
        if (preg_match("/^\+[0-9]{9,14}$/i", $text)) {
            if ($this->setActionUser("step_2_adress", $user_id)) {
                if ($this->setParamUser('phone', $text, $user_id)) {
                    $text_ = "<b>–ë—É—é—Ä—Ç–º–∞</b>\n\n";
                    // —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
                    //$text_ .= "–ë—É—é—Ä—Ç–º–∞ –º–∏“õ–¥–æ—Ä–∏: " . $this->totalSumOrder($user_id) . " so'm";
                    // —Ç–µ–ª–µ—Ñ–æ–Ω
                    //$text_ .= "\n–¢–µ–ª–µ—Ñ–æ–Ω: " . $text;
                    $text_ .= "\n\n–ú–∞–Ω–∑–∏–ª–∏–Ω–≥–∏–∑ –≤–∞ –µ—Ç–∫–∞–∑–∏—à –≤–∞“õ—Ç–∏–Ω–∏ –∫—Ä–∏—Ç–∏–Ω–≥:";
                } else {
                    $text_ = "Qayta urinib ko'ring üëâ /start";
                }
            } else {
                $text_ = "Qayta urinib ko'ring";
            }
        } else {
            $text_ = "Kiritilgan ma'lumotlarda xatolik yuz berdi, qayta urinib ko'ring.\n\nTelefoningizni formatda +9989******** kriting:";
        }
        $this->botApiQuery("sendMessage", [
            'chat_id' => $user_id,
            'text' => $text_,
            'parse_mode' => 'html',
        ]);
    }

    /** –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å
     * @param $text
     * @param $data
     */
    private function saveAdressUser($text, $data)
    {
        $user_id = $this->getChatId($data);
        // –î–æ—Å—Ç–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
        $phone = $this->pdo->prepare("SELECT phone FROM bot_shop_profile WHERE user_id = :user_id");
        $phone->execute(['user_id' => $user_id]);

        if ($this->setActionUser("step_3_ready", $user_id)) {
            if ($this->setParamUser('adress', $text, $user_id)) {
                $text_ = "<b>–ë—É—é—Ä—Ç–º–∞</b>\n\n";
                // —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
                $text_ .= "–ë—É—é—Ä—Ç–º–∞ –º–∏“õ–¥–æ—Ä–∏: " . $this->totalSumOrder($user_id) . " so'm";
                // —Ç–µ–ª–µ—Ñ–æ–Ω
                $text_ .= "\n–¢–µ–ª–µ—Ñ–æ–Ω: " . $phone->fetch()['phone'];
                $text_ .= "\n–ú–∞–Ω–∑–∏–ª–∏: " . $text;
                $buttons[] = [
                    $this->buildInlineKeyBoardButton("–Ø–Ω–∞ “õ—û—à–∏—à", "showCatalog_0"),
                    $this->buildInlineKeyBoardButton('‚úî –¢–∞—Å—Ç–∏“õ–ª–∞—à ', 'setReady_0'),
                ];
            } else {
                $text_ = "Qayta urinib ko'ring üëâ /start";
            }
        } else {
            $text_ = "Qayta urinib ko'ring";
        }
        // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
        $data_send = [
            'chat_id' => $user_id,
            'text' => $text_,
            'parse_mode' => 'html',
        ];
        // –µ—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º
        if (is_array($buttons)) {
            $data_send['reply_markup'] = $this->buildInlineKeyBoard($buttons);
        }
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        $this->botApiQuery("sendMessage", $data_send);
    }

    /** –û—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞–∫–∞–∑
     * @param $data
     */
    private function setReady($data)
    {
        $user_id = $this->getChatId($data);
        // –¥–æ—Å—Ç–∞–µ–º –≤—Å–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        $basket = $this->pdo->prepare("SELECT * FROM bot_shop_basket WHERE user_id = :user_id");
        $basket->execute(['user_id' => $user_id]);
        // –¥–æ—Å—Ç–∞–µ–º –≤—Å–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $user = $this->pdo->prepare("SELECT * FROM bot_shop_profile WHERE user_id = :user_id");
        $user->execute(['user_id' => $user_id]);
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        if ($basket->rowCount() > 0) {
            $userInfo = $user->fetch();
            // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É –∑–∞–∫–∞–∑–æ–≤
            $inOrder = $this->pdo->prepare("INSERT INTO bot_shop_order SET user_id = :user_id, date = NOW(), status = 0, name = :name, phone = :phone, adress = :adress");
            if ($inOrder->execute([
                'user_id' => $user_id,
                'name' => trim($userInfo['first_name'] . " " . $userInfo['last_name']),
                'phone' => $userInfo['phone'],
                'adress' => $userInfo['adress'],
            ])) {
                $parent_id = $this->pdo->lastInsertId();
                // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
                while ($item = $basket->fetch()) {
                    $inOrderProduct = $this->pdo->prepare("INSERT INTO bot_shop_order_product SET parent_id = :parent_id, product_id = :product_id,	product_count = :product_count");
                    $inOrderProduct->execute(['parent_id' => $parent_id, 'product_id' => $item['product_id'], 'product_count' => $item['product_count']]);
                }
                // —É–¥–∞–ª—è–µ–º –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
                $delBasket = $this->pdo->prepare("DELETE FROM bot_shop_basket WHERE user_id = :user_id");
                $delBasket->execute(['user_id' => $user_id]);
                // –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                $this->notice($data['id']);
                $this->userLc($user_id, $data['message']['message_id']);
            } else {
                $this->notice($data['id'], "–û—à–∏–±–∫–∞_", true);
            }
        } else {
            $this->notice($data['id'], "–û—à–∏–±–∫–∞", true);
        }
    }

    /** –í—ã–≤–æ–¥–∏–º –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param $user_id
     */
    private function userLc($user_id, $message_id = 0)
    {
        // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        $array = $this->drawOrder($user_id, 0);
        // –≥–æ—Ç–æ–≤–∏–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        $data_send = [
            'chat_id' => $user_id,
            'text' => $array['text'],
            'parse_mode' => 'html',
        ];
        // –µ—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º
        if (is_array($array['buttons'])) {
            $data_send['reply_markup'] = $this->buildInlineKeyBoard($array['buttons']);
        }
        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–º –º–µ—Ç–æ–¥–æ–º –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
        if ($message_id) {
            $data_send['message_id'] = $message_id;
            $this->botApiQuery("editMessageText", $data_send);
        } else {
            $this->botApiQuery("sendMessage", $data_send);
        }
    }

    /** –†–∏—Å—É–µ–º –∑–∞–∫–∞–∑
     * @param $user_id
     * @param $begin
     * @return array
     */
    private function drawOrder($user_id, $begin)
    {
        // –¥–æ—Å—Ç–∞–µ–º –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã —Ç–æ–≤–∞—Ä
        $order = $this->pdo->prepare("SELECT * FROM bot_shop_order WHERE user_id = :user_id ORDER BY id DESC LIMIT " . $begin . ", 1");
        $order->execute(['user_id' => $user_id]);
        if ($order->rowCount() > 0) {
            $orderRaw = $order->fetch();
            // —Å—á–∏—Ç–∞–µ–º –æ–±—â—É—é—é —Å—É–º–º—É
            $orderProduct = $this->pdo->prepare("SELECT * FROM bot_shop_order_product WHERE parent_id = :parent_id");
            $orderProduct->execute(['parent_id' => $orderRaw['id']]);
            // –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫ –Ω–æ–ª—å
            $total = 0.00;
            // –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤
            while ($row = $orderProduct->fetch()) {
                $model_product = $this->pdo->prepare("SELECT * FROM bot_shop_product WHERE id = :id");
                $model_product->execute(['id' => $row['product_id']]);
                $product = $model_product->fetch();
                // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—É–º–º—É
                $sum = $product['price'] * $row['product_count'];
                $total += $sum;
            }
            // –≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
            $text = "<b>Tastiqlangan Buyurtma</b>\n\n<b>Buyurtma vaqti:</b> " . $orderRaw['date'] . "\n";
            $text .= "<b>Umumiy summa:</b> " . $total . " so'm\n";
            $text .= "<b>Telefon:</b> " . $orderRaw['phone'] . "\n";
            $text .= "<b>Manzil:</b> " . $orderRaw['adress'] . "\n\nAdmin qo'ng'irog'ini kuting.";

    /********************************************/

    // –°—Ç–∞—Ç—å—è 4 - –û–ø–ª–∞—Ç–∞ –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º

    /********************************************/

            // if(!$orderRaw['status']) {
            //     // –≥–æ—Ç–æ–≤–∏–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏
            //     $url = $this->getUrl($total, $user_id, $orderRaw['id']);
            //     $buttons[][] = $this->buildInlineKeyBoardButton('/start', '', $url);
            // } else {
            //     // –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω —Ç–æ —É–≤–µ–¥–æ–º–ª—è–µ–º
            //     $text .= "\n<b>To'landi</b>\n";
            // }
            
    /********************************************/

    // –°—Ç–∞—Ç—å—è 4 - –û–ø–ª–∞—Ç–∞ –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º

    /********************************************/

		// –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		$orderCount = $this->pdo->prepare("SELECT * FROM bot_shop_order WHERE user_id = :user_id");
		$orderCount->execute(['user_id' => $user_id]);
		$count = $orderCount->rowCount();
		// –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
		if ($count > 1) {
			$prev = ($begin == 0) ? $count - 1 : $begin - 1;
			$next = ($count == $begin + 1) ? 0 : $begin + 1;
			// –≤—ã–≤–æ–¥–∏–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
			$buttons[] = [
				$this->buildInlineKeyBoardButton('<< Oldingi', 'orderGo_' . $prev),
				$this->buildInlineKeyBoardButton('Keyingi >>', 'orderGo_' . $next),
			];
		}
        } else {
            $text = "–û—à–∏–±–∫–∞___";
        }
        
		$buttons[] = [
				$this->buildInlineKeyBoardButton("start", "showCatalog_0"),
		];
        
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        return [
            'text' => $text,
            'buttons' => $buttons,
        ];
    }

    /** –õ–∏—Å—Ç–∞–µ–º –∑–∞–∫–∞–∑—ã
     * @param $data
     */
    private function orderGo($data)
    {
        $user_id = $this->getChatId($data);
        $param = explode("_", $data['data']);
        // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        $array = $this->drawOrder($user_id, $param[1]);
        // –≥–æ—Ç–æ–≤–∏–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        $data_send = [
            'chat_id' => $user_id,
            'message_id' => $data['message']['message_id'],
            'text' => $array['text'],
            'parse_mode' => 'html',
        ];
        // –µ—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º
        if (is_array($array['buttons'])) {
            $data_send['reply_markup'] = $this->buildInlineKeyBoard($array['buttons']);
        }
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        $this->botApiQuery("editMessageText", $data_send);
        $this->notice($data['id']);
    }

    /** –ü–æ–ª—É—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
     * @return bool
     */
    private function getUserAction($user_id)
    {
        // –¥–æ—Å—Ç–∞–µ–º –∏–∑ –±–∞–∑—ã
        $last = $this->pdo->prepare("SELECT action FROM bot_shop_profile WHERE user_id = :user_id");
        $last->execute(['user_id' => $user_id]);
        // –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤
        $lastAction = $last->fetch();
        // –µ—Å–ª–∏ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –∏–Ω–∞—á–µ false
        return !empty($lastAction['action']) ? $lastAction['action'] : false;
    }

    /** –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param $action
     * @return mixed
     */
    private function setActionUser($action, $user_id)
    {
        // –≥–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å
        $insertSql = $this->pdo->prepare("UPDATE bot_shop_profile SET action = :action WHERE user_id = :user_id");
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return $insertSql->execute(['action' => $action, 'user_id' => $user_id]);
    }

    /** –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∞
     * @param $param
     * @param $value
     * @param $user_id
     * @return bool
     */
    private function setParamUser($param, $value, $user_id)
    {
        // –≥–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å
        $insertSql = $this->pdo->prepare("UPDATE bot_shop_profile SET " . $param . " = :value WHERE user_id = :user_id");
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return $insertSql->execute(['value' => $value, 'user_id' => $user_id]);
    }

    /********************************************/

    // –°—Ç–∞—Ç—å—è 4 - –û–ø–ª–∞—Ç–∞ –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º

    /********************************************/

    /** –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
     * @param $sum
     * @param $user_id
     * @param $order_id
     * @return string
     */
    private function getUrl($sum, $user_id, $order_id)
    {
        return "https://money.yandex.ru/quickpay/confirm.xml?receiver=" . $this->receiver
            . "&quickpay-form=shop&targets=" . urlencode($this->nameShop)
            . "&paymentType=AC&sum=" . $sum
            . "&label=" . $user_id . ":" . $order_id . ":" . md5(rand(0, 1000))
            . "&comment=" . urlencode("–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ #" . $order_id)
            . "&successURL=" . $this->urlBot;
    }

    //////////////////////////////////
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    //////////////////////////////////
    /**
     *  –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
     */
    private function setPdo()
    {
        // –∑–∞–¥–∞–µ–º —Ç–∏–ø –ë–î, —Ö–æ—Å—Ç, –∏–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —á–∞—Ä—Å–µ—Ç
        $dsn = "mysql:host=$this->host;dbname=$this->db;charset=$this->charset";
        // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
        $opt = [
            // —Å–ø–æ—Å–æ–± –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ - —Ä–µ–∂–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
            // —Ç–∏–ø –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é - –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤
            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
            // –æ—Ç–∫–ª—é—á–∞–µ–º —ç–º—É–ª—è—Ü–∏—é –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
            PDO::ATTR_EMULATE_PREPARES => false,
            // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤
            PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci"
        ];
        // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—ä–µ–∫—Ç PDO –≤ —Å–≤–æ–π—Å—Ç–≤–æ $this->pdo
        $this->pdo = new PDO($dsn, $this->user, $this->pass, $opt);
    }

    /** –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∞–¥–º–∏–Ω–∞
     * @param $chat_id
     * @return bool
     */
    private function isAdmin($chat_id)
    {
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true –∏–ª–∏ fasle
        return $chat_id == $this->admin;
    }

    /** –ü–æ–ª—É—á–∞–µ–º id —á–∞—Ç–∞
     * @param $data
     * @return mixed
     */
    private function getChatId($data)
    {
        if ($this->getType($data) == "callback_query") {
            return $data['callback_query']['message']['chat']['id'];
        }
        return $data['message']['chat']['id'];
    }

    /** –ü–æ–ª—É—á–∞–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param $data
     * @return mixed
     */
    private function getMessageId($data)
    {
        if ($this->getType($data) == "callback_query") {
            return $data['callback_query']['message']['message_id'];
        }
        return $data['message']['message_id'];
    }

    /** –ø–æ–ª—É—á–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç
     * @return mixed
     */
    private function getText($data)
    {
        if ($this->getType($data) == "callback_query") {
            return $data['callback_query']['data'];
        }
        return $data['message']['text'];
    }

    /** –£–∑–Ω–∞–µ–º –∫–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏—à–µ–ª
     * @param $data
     * @return bool|string
     */
    private function getType($data)
    {
        if (isset($data['callback_query'])) {
            return "callback_query";
        } elseif (isset($data['message']['text'])) {
            return "message";
        } elseif (isset($data['message']['photo'])) {
            return "photo";
        } else {
            return false;
        }
    }

    /** –ö–Ω–æ–ø–∫–∞ inline
     * @param $text
     * @param string $callback_data
     * @param string $url
     * @return array
     */
    public function buildInlineKeyboardButton($text, $callback_data = '', $url = '')
    {
        // —Ä–∏—Å—É–µ–º –∫–Ω–æ–ø–∫–µ —Ç–µ–∫—Å—Ç
        $replyMarkup = [
            'text' => $text,
        ];
        // –ø–∏—à–µ–º –æ–¥–Ω–æ –∏–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–π –∫–Ω–æ–ø–∫–µ
        if ($url != '') {
            $replyMarkup['url'] = $url;
        } elseif ($callback_data != '') {
            $replyMarkup['callback_data'] = $callback_data;
        }
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É
        return $replyMarkup;
    }

    /** –Ω–∞–±–æ—Ä –∫–Ω–æ–ø–æ–∫ inline
     * @param array $options
     * @return string
     */
    public function buildInlineKeyBoard(array $options)
    {
        // —Å–æ–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏
        $replyMarkup = [
            'inline_keyboard' => $options,
        ];
        // –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ JSON –æ–±—ä–µ–∫—Ç
        $encodedMarkup = json_encode($replyMarkup, true);
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        return $encodedMarkup;
    }

    /** –∫–Ω–æ–ø–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
     * @param $text
     * @param bool $request_contact
     * @param bool $request_location
     * @return array
     */
    public function buildKeyboardButton($text, $request_contact = false, $request_location = false)
    {
        $replyMarkup = [
            'text' => $text,
            'request_contact' => $request_contact,
            'request_location' => $request_location,
        ];
        return $replyMarkup;
    }

    /** –≥–æ—Ç–æ–≤–∏–º –Ω–∞–±–æ—Ä –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
     * @param array $options
     * @param bool $onetime
     * @param bool $resize
     * @param bool $selective
     * @return string
     */
    public function buildKeyBoard(array $options, $onetime = false, $resize = false, $selective = true)
    {
        $replyMarkup = [
            'keyboard' => $options,
            'one_time_keyboard' => $onetime,
            'resize_keyboard' => $resize,
            'selective' => $selective,
        ];
        $encodedMarkup = json_encode($replyMarkup, true);
        return $encodedMarkup;
    }

    //////////////////////////////////
    // –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ë–æ—Ç –ê–ø–∏
    //////////////////////////////////
    /** –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline –∫–Ω–æ–ø–∫–∞–º–∏
     * @param $user_id
     * @param $text
     * @param null $buttons
     * @return mixed
     */
    private function sendMessage($user_id, $text, $buttons = NULL)
    {
        // –≥–æ—Ç–æ–≤–∏–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö
        $data_send = [
            'chat_id' => $user_id,
            'text' => $text,
            'parse_mode' => 'html'
        ];
        // –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã –∫–Ω–æ–ø–∫–∏ —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        if (!is_null($buttons) && is_array($buttons)) {
            $data_send['reply_markup'] = $this->buildInlineKeyBoard($buttons);
        }
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        return $this->botApiQuery("sendMessage", $data_send);
    }

    /** –ú–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param $user_id
     * @param $message_id
     * @param $text
     * @param null $buttons
     * @return mixed
     */
    private function editMessageText($user_id, $message_id, $text, $buttons = NULL)
    {
        // –≥–æ—Ç–æ–≤–∏–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö
        $data_send = [
            'chat_id' => $user_id,
            'text' => $text,
            'message_id' => $message_id,
            'parse_mode' => 'html'
        ];
        // –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã –∫–Ω–æ–ø–∫–∏ —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        if (!is_null($buttons) && is_array($buttons)) {
            $data_send['reply_markup'] = $this->buildInlineKeyBoard($buttons);
        }
        // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        return $this->botApiQuery("editMessageText", $data_send);
    }


    /** –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–ª–∏–µ–Ω—Ç–µ
     * @param $cbq_id
     * @param $text
     * @param bool $type
     */
    private function notice($cbq_id, $text = "", $type = false)
    {
        $data = [
            'callback_query_id' => $cbq_id,
            'show_alert' => $type,
        ];

        if (!empty($text)) {
            $data['text'] = $text;
        }

        $this->botApiQuery("answerCallbackQuery", $data);
    }

    /** –ó–∞–ø—Ä–æ—Å –∫ BotApi
     * @param $method
     * @param array $fields
     * @return mixed
     */
    private function botApiQuery($method, $fields = array())
    {
        $ch = curl_init('https://api.telegram.org/bot' . $this->token . '/' . $method);
        curl_setopt_array($ch, array(
            CURLOPT_POST => count($fields),
            CURLOPT_POSTFIELDS => http_build_query($fields),
            CURLOPT_SSL_VERIFYPEER => 0,
            CURLOPT_RETURNTRANSFER => 1,
            CURLOPT_TIMEOUT => 10
        ));
        $r = json_decode(curl_exec($ch), true);
        curl_close($ch);
        return $r;
    }
}
